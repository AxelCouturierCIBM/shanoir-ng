# Create a Docker image for each microservice in Shanoir
name: Publish Docker images

env:
  DOCKER_REPOSITORY: ghcr.io/${{ github.repository }}
  TAG: ${{ github.ref_name }}
  IMAGES: datasets import nginx preclinical studies users
  #IMAGES: database datasets import keycloak keycloak-database nginx nifti-conversion preclinical solr studies users
on:
  workflow_dispatch:
  push:
#  push:
#    tags:
#      - '*'
  
jobs:
  push_to_registry:
    name: Push Docker images to Container registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Check out the repo
        uses: actions/checkout@v3

##      - name: Create directory /shanoir-ng-logs
##        run: sudo mkdir -m777 /var/log/shanoir-ng-logs
      
#      - name: Maven build
#        run: mvn -f ./shanoir-ng-parent/pom.xml install -DskipTests
##        env:
##          SHANOIR_URL_HOST: localhost
##          SHANOIR_URL_SCHEME: http
##          SHANOIR_PREFIX: github
##          SHANOIR_ADMIN_EMAIL: nobody@inria.fr
##          SHANOIR_KEYCLOAK_USER: admin
##          SHANOIR_KEYCLOAK_PASSWORD: '&a1A&a1A'
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REPOSITORY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build docker images
        run: |
          for image in $IMAGES ; do
            docker build  -t "${{ env.DOCKER_REPOSITORY }}/$image:${{ env.TAG }}" \
                          -t "${{ env.DOCKER_REPOSITORY }}/$image:latest" \
                          "docker-compose/$image"
          done

      - name: Push docker images
        run: |
          for image in $IMAGES ; do
            docker push --all-tags "${{ env.DOCKER_REPOSITORY }}/$image:"
          done
